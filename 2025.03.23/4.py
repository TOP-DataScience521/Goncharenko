# Написать программу, которая подсчитывает количество простых чисел среди всех чисел одной разрядности.

# Программа получает из stdin натуральное число n — количество разрядов.
# Далее, с помощью вложенных циклов программа считает количество простых чисел среди всех n-значных чисел.
# Результат программа выводит в stdout.

# Примечание: простые числа делятся только на единицу и на само себя.

# Подсказка: конкатенация последовательностей может быть осуществлена посредством умножения на число:
#     >>> 'z' * 4
#     'zzzz'

# Пример ввода:
#     3

# Пример вывода:
#     143

num = int(input("inter number - "))
# num = 3

start_count = int("1" + "0" * (num-1))
finish_count = int("1" + "0" * (num))-1
# print(start_count)
# print(finish_count)

tuple = []
# tuple1= [11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
# tuple1= [101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]

i = start_count
while i < finish_count:
    if not (i % 2 == 0 or i % 3 == 0 or i % 5 == 0 or i % 7 == 0):
      tuple.append(i)
      i += 1
    else:
      i += 1

# print(tuple)
# print(tuple1)
print(len(tuple))

# inter number - 3
# 206