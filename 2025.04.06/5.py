# Написать функцию с именем orth_triangle, которая вычисляет третью сторону прямоугольного треугольника по двум переданным.

# Функция принимает в качестве аргументов длины двух сторон: это могут быть два катета или один из катетов и гипотенуза. 
    
#     Для того чтобы обеспечить требуемую гибкость, понадобится создать три строго ключевых параметра, каждый со значением по умолчанию.
    
#     Длины стороны могут быть переданы в виде объектов int или float. 
#         С точки зрения аннотации, достаточно указать float — в подавляющем большинстве случаев это означает, что объекты int также допустимы.

# Функция возвращает длину третьей стороны треугольника или None, если вычисление невозможно.
    
#     Если вычисление возможно, то возвращается объект float.
    
#     Вычисление может оказаться невозможным при неправильной передаче аргументов. Например, если длина гипотенузы меньше длины катета.
#     Также вычисление невозможно или не имеет смысла, если в функцию передаётся три, а не два аргумента.

# Для выполнения расчётов используйте теорему Пифагора:
#     https://mateshka.ru/math/geometry/treugolnik.html

# Написанную функцию необходимо протестировать вручную.
# Пример ручного теста:
#     >>> orth_triangle(cathetus1=3, hypotenuse=5)
#     4.0
#     >>> orth_triangle(cathetus1=8, cathetus2=15)
#     17.0
#     >>> print(orth_triangle(cathetus2=9, hypotenuse=3))
#     None

def orth_triangle(catet1:int =0, catet2:int =0, gipot: int =0):
    if catet1 == 0:
        catet1 = ((gipot**2 - catet2**2)**0.5)
        if int(catet1.real) > 0:     # int(catet1.real) преобразую комплексное число для сравнения
            return catet1
    if catet2 == 0:
        catet2 = (gipot**2 - catet1**2)**0.5
        if int(catet2.real) > 0:
            return catet2
    if gipot == 0:
        gipot = (catet1**2 + catet2**2)**0.5
        return gipot

print(orth_triangle(catet1=8, catet2= 15))
# 17.0
print(orth_triangle(catet1=3, gipot=5))
# 4.0
print(orth_triangle(catet1=9, gipot=3))
# None