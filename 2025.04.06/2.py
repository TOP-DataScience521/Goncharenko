# Написать функцию с именем taxi_cost, которая вычисляет стоимость поездки на такси.
# Функция принимает обязательным аргументом длину маршрута в метрах и необязательным аргументом длительность ожидания в минутах.
#     Оба аргумента должны быть позиционно-ключевыми и переданы в виде объектов int. 
#     Значение по умолчанию для длительности ожидания — ноль.
# Функция возвращает стоимость поездки или None, если вычисление невозможно. 
#     Переданные длина маршрута и длительность ожидания могут быть нулями или положительными числами, но не должны быть отрицательными числами. 
#     Если всё же функции были явно переданы отрицательные числа, то это означает невозможность корректно провести вычисление.
    
#     Если вычисление возможно, то возвращается объект int.
#         Аннотация нескольких типов записывается с помощью |
#         >>> def func() -> int | None:
#         ...     pass

# Расчёт стоимости осуществляется по следующим правилам:
#     - базовая стоимость поездки 80 рублей
#     - за каждые 150 метров к стоимости добавляется 6 рублей
#     - за каждую минуту ожидания к стоимости добавляется 3 рубля
#     - при отмене поездки (длина маршрута составила 0 метров) к стоимости добавляется штраф 80 рублей и стоимость времени ожидания
#     - итоговая стоимость математически округляется до целого числа

cost_minutes = 3
fine = 80
cost_per_150meters = 6


def taxi_cost (meters: int, minutes : int = 0):               #не разобрался как тут использовать Аннотацию нескольких типов
    path = round(meters / 150) * cost_per_150meters
    price = 80

    if meters == 0:
        price = price + fine + minutes * cost_minutes
    elif meters > 0:
        price = price + path + minutes* cost_minutes
    else:
        return None
    return round(price)

# print(taxi_cost(0,10))
# 190
# print(taxi_cost(-14))
# None
# print(taxi_cost(50,5))
# 95
# print(taxi_cost(1450))
# 140
# print(taxi_cost(2444,10))
# 206



    
# Написанную функцию необходимо протестировать вручную.
# Пример ручного теста:
#     >>> taxi_cost(1500)
#     140
#     >>> taxi_cost(2560)
#     182
#     >>> taxi_cost(0, 5)
#     175
#     >>> taxi_cost(42130, 8)
#     1789
#     >>> print(taxi_cost(-300))
#     None

